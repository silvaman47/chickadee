name: CI - Frontend & Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend (Vite + React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./   # frontend at repo root
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build (vite)
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist

  backend:
    name: Backend (Node + Express + MongoDB)
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: ./backend
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./backend/public

      - name: Wait for MongoDB to be ready
        run: |
          for i in $(seq 1 30); do
            nc -z localhost 27017 && echo "Mongo is up" && break
            echo "Waiting for Mongo ($i/30)..."
            sleep 1
          done

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: npm ci

      - name: Create .env for CI (do NOT commit .env to repo)
        run: |
          echo "MONGO_URI=mongodb://localhost:27017/chickenapp_ci" > .env
          echo "JWT_SECRET=secret123" >> .env
          echo "NODE_ENV=test" >> .env

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t chickenapp:latest .
